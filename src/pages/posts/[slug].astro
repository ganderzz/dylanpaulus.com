---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPost from "@layouts/BlogPost.astro";

export async function getStaticPaths() {
  const posts = await getCollection("post");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props as {
  post: CollectionEntry<"post">;
};

const { Content, remarkPluginFrontmatter } = await post.render();
---

<BlogPost frontmatter={{ ...post.data, ...remarkPluginFrontmatter }}>
  <Content />
</BlogPost>

<script client:only>
  const codeblocks = document.querySelectorAll("pre code");

  codeblocks.forEach((block) => {
    const copyButton = document.createElement("button");
    copyButton.innerText = "Copy";
    copyButton.classList.add("copy-button", "text-white");

    copyButton.addEventListener("click", () => {
      navigator.clipboard.writeText(block.innerText);
      copyButton.innerText = "Copied!";
      setTimeout(() => {
        copyButton.innerText = "Copy";
      }, 2000);
    });

    block.parentNode.appendChild(copyButton);
  });
</script>
